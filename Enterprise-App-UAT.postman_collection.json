{
	"info": {
		"_postman_id": "76fe7dbd-ea0a-435e-b044-74655de5fcb1",
		"name": "Enterprise-App-UAT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23057138"
	},
	"item": [
		{
			"name": "External Login",
			"item": [
				{
					"name": "externalLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate success message value is \" + jsonData.success + \" in response\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message value is \" + jsonData.message + \" in response\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"OTP Generated Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate loginId value is \" + pm.environment.get(\"expectedloginId\") +\" in response\", function () {\r",
									"\r",
									"    pm.expect(jsonData.data.loginId).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate registeredUser value is true in response\", function () {\r",
									"     pm.expect(jsonData.data.registeredUser).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var expectedloginId = \"9891803084\";\r",
									"pm.environment.set(\"expectedloginId\", expectedloginId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"loginId\": {{expectedloginId}},\r\n        \"loginType\":\"mobile\",\r\n        \"notificationType\":\"sms\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}externalLogin",
							"host": [
								"{{enterpriseurl}}externalLogin"
							]
						}
					},
					"response": [
						{
							"name": "externalLogin_success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									},
									{
										"key": "appId",
										"value": "External",
										"type": "text"
									},
									{
										"key": "specificAppId",
										"value": "OneApp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"loginId\": \"8800996677\",\r\n        \"loginType\":\"mobile\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/externalLogin",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"externalLogin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 07:25:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP Generated Successfully\",\n    \"data\": {\n        \"loginId\": \"8800996677\",\n        \"registeredUser\": true\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "verifyOtpExternal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsondata = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate success message value is true in reponse\", function () {\r",
									"    pm.expect(jsondata.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message value is \"+ jsondata.message+  \" in reponse\", function () {\r",
									"    pm.expect(jsondata.message).to.eql(\"OTP Verified Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate loginId value is \" + pm.environment.get(\"expectedloginId\")+  \" in reponse\", function () {\r",
									"    pm.expect(jsondata.data.loginId).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"token = jsondata.data.token;\r",
									"customerIdentifier = jsondata.data.customerIdentifier;\r",
									"access_key = jsondata.data.accessKey;\r",
									"accessToken = jsondata.data.accessToken;\r",
									"pm.test(\"Auth code has saved\", function()\r",
									"{\r",
									"    pm.environment.set(\"token\", token);\r",
									"     pm.environment.set(\"identifier\", customerIdentifier);\r",
									"     pm.environment.set(\"access_key\", access_key);\r",
									"     pm.environment.set(\"accessToken\", accessToken);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"loginId\": {{expectedloginId}},\r\n        \"otp\":\"123456\",\r\n        \"isdCode\":\"+91\",\r\n        \"deviceType\":\"IOS\",\r\n        \"osVersion\":\"15.1\",\r\n        \"appVersion\":\"10\",\r\n        \"deviceModel\" :\"x86_64\",\r\n        \"firebaseToken\": \"e9f_Vt_lRhK-GmPxDe2BkF:APA91bGec-ldCPcUWQ03iI9gE7yKsDTFavbB2_1Twh_GRrwLiHrDlSmEXCktaSkG9UoqCS0L2VlrJNv8u7WtKGOVu9byo5xVibFUL2xMhUFVpbuznqAZOQNqdvm-PfPJNTUEj5Rq_sGy\"\r\n        \r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}verifyOtpExternal",
							"host": [
								"{{enterpriseurl}}verifyOtpExternal"
							]
						}
					},
					"response": [
						{
							"name": "verifyOtpExternal_success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									},
									{
										"key": "appId",
										"value": "External",
										"type": "text"
									},
									{
										"key": "specificAppId",
										"value": "OneApp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"loginId\": \"8800996677\",\r\n        \"otp\":\"123456\",\r\n        \"isdCode\":\"+91\",\r\n        \"deviceType\":\"IOS\",\r\n        \"osVersion\":\"15.1\",\r\n        \"appVersion\":\"10\",\r\n        \"deviceModel\" :\"x86_64\",\r\n        \"firebaseToken\": \"e9f_Vt_lRhK-GmPxDe2BkF:APA91bGec-ldCPcUWQ03iI9gE7yKsDTFavbB2_1Twh_GRrwLiHrDlSmEXCktaSkG9UoqCS0L2VlrJNv8u7WtKGOVu9byo5xVibFUL2xMhUFVpbuznqAZOQNqdvm-PfPJNTUEj5Rq_sGy\"\r\n        \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/verifyOtpExternal",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"verifyOtpExternal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 07:27:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP Verified Successfully\",\n    \"data\": {\n        \"profilePicPath\": \"https://oneapphero1.blob.core.windows.net/userdata/oneapp/profilePicture/heroUserProfile@aeeebb27-fd11-4a3b-946e-7042758661001702545157419.png\",\n        \"isExisting\": \"1\",\n        \"pnrConId\": \"2-RSC6WLC\",\n        \"uniqueId\": \"HEROMAY23-549a41e6-f94f-11ed-8e52-c67c1c172262\",\n        \"firstName\": \"Randhir\",\n        \"lastName\": \"P\",\n        \"appName\": \"oneapp\",\n        \"mediaToken\": \"c3A9ciZzdD0yMDIyLTExLTIzVDA5OjIwOjUzWiZzZT0yMDI0LTEyLTMxVDE3OjIwOjUzWiZzcHI9\\naHR0cHMmc3Y9MjAyMS0wNi0wOCZzcj1jJnNpZz1mU2duWlF4T2ZhMUM5WDczQ3BRaWZLSFNsT3k0\\nQ3p5R1F4NEpkRmdxbENnJTNE\",\n        \"mobileNo\": \"8800996677\",\n        \"appId\": \"8800996677_External\",\n        \"loginId\": \"8800996677\",\n        \"token\": \"ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SmhZMk5sYzNOZmRHOXJaVzRpT2lJeU16VXpOalExWVMxa1pqVXpMVFJtTVdVdFlqazRNQzFrTVdJeU0yRTRaRFl3TlRRaUxDSmhZMk5sYzNOZmEyVjVJam9pTWpNMU16WTBOV0V0WkdZMU15MDBaakZsTFdJNU9EQXRaREZpTWpOaE9HUTJNRFUwSWl3aWJXOWlhV3hsVG04aU9pSTRPREF3T1RrMk5qYzNJaXdpWTNWemRHOXRaWEpKWkdWdWRHbG1hV1Z5SWpvaU1EQmpPRGcxWkRFdE1qWTJOUzAwWVRGakxXRmpaV1l0WldGbVpqQTJNamxsWWpKbUlpd2lZWEJ3WDJsa0lqb2lPRGd3TURrNU5qWTNOMTlGZUhSbGNtNWhiQ0lzSW5Od1pXTnBabWxqWDJGd2NGOXBaQ0k2SWs5dVpVRndjQ0lzSW5SdmEyVnVJam9pTWpNMU16WTBOV0V0WkdZMU15MDBaakZsTFdJNU9EQXRaREZpTWpOaE9HUTJNRFUwSWl3aVpYaHdJam94TnpBMU9ESXlNRFU0TENKdVlXMWxJam9pSW4wLmpMTDhCcWlGVlpmWW1jUHpFa0hDYTVoRGFpMjQxU1ktR2pOdEZreU1tUUk=\",\n        \"customerIdentifier\": \"00c885d1-2665-4a1c-acef-eaff0629eb2f\",\n        \"isdCode\": \"+91\",\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiJ9.eyJhcHBfaWQiOiJFeHRlcm5hbCIsInNwZWNpZmljX2FwcF9pZCI6Ik9uZUFwcCIsImxvZ2luSWQiOiI4ODAwOTk2Njc3IiwibW9iaWxlTm8iOiI4ODAwOTk2Njc3Iiwic3ViIjoiand0IiwianRpIjoiMDZjNDc0M2ItYmY5My00MzZmLWE2YjUtMjQ5MzY4MDAyZmZiIiwiaWF0IjoxNzA0OTU4MDU4LCJleHAiOjE3MTI3MzQwNTh9.MVmuFJ-LVkMX-2zJAHjKxIRku7WRfy3vlQw2DdM6taU\"\n    },\n    \"success\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "External Customer Profile",
			"item": [
				{
					"name": "getExternalCustomerDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Customer Profile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate firstName\", function () {\r",
									"  pm.expect(jsonData.data.profile.firstName).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate email\", function () {\r",
									"  pm.expect(jsonData.data.profile.email).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.email).to.eql(pm.environment.get(\"email\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate birthDate\", function () {\r",
									"  pm.expect(jsonData.data.profile.birthDate).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.birthDate).to.eql(pm.environment.get(\"birthDate\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate gender\", function () {\r",
									"  pm.expect(jsonData.data.profile.gender).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.gender).to.eql(pm.environment.get(\"gender\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate addressLine1\", function () {\r",
									"  pm.expect(jsonData.data.profile.addressLine1).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.addressLine1).to.eql(pm.environment.get(\"addressLine1\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate pincode\", function () {\r",
									"  pm.expect(jsonData.data.profile.pincode).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.pincode).to.eql(pm.environment.get(\"pincode\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate bloodGroup\", function () {\r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.eql(pm.environment.get(\"bloodGroup\"));\r",
									"  \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate bloodGroup\", function () {\r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.eql(pm.environment.get(\"bloodGroup\"));\r",
									"  \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n       }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getExternalCustomerDetails",
							"host": [
								"{{enterpriseurl}}getExternalCustomerDetails"
							]
						}
					},
					"response": [
						{
							"name": "getExternalCustomerDetails",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b\"\r\n       }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/getExternalCustomerDetails",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"getExternalCustomerDetails"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 08:46:43 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Customer Profile\",\n    \"data\": {\n        \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b\",\n        \"customerIdAppId\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n        \"profile\": {\n            \"lastName\": \"ARORA\",\n            \"firstName\": \"MALLAIAHS\",\n            \"email\": \"mukesh1998@gmail.com\",\n            \"birthDate\": \"\",\n            \"mobileNo\": \"8282828282\",\n            \"gender\": \"male\",\n            \"addressLine1\": \"HNO39\",\n            \"state\": \"Bihar\",\n            \"addressLine2\": \"\",\n            \"district\": \"RANGAREDDI\",\n            \"tehsil\": \"\",\n            \"pincode\": \"800002\",\n            \"city\": \"Patna\",\n            \"bloodGroup\": \"\",\n            \"profilePicPath\": \"https://oneapphero1.blob.core.windows.net/userdata/oneapp/profilePicture/heroUserProfile@2b1527f2-0860-4f4f-9c2f-823107c9cb5c1684910956848.png\",\n            \"isExisting\": \"1\",\n            \"deviceType\": \"IOS\",\n            \"osVersion\": \"17.0\",\n            \"deviceModel\": \"x86_64\",\n            \"secondaryContactNo\": \"9191919191\",\n            \"isdCode\": \"+91\",\n            \"firebaseToken\": \"dXVUV4bOZEt9misGs2LPrp:APA91bFp03mBXiVrP-05vJRuRbS3ngaNHyD62mSpHj9Nt4oXQHWQp8rb2YnAHRidJDYCZhfbXR0vdwA4CWwbYtW2bjpzn7jVW9uRjJZ-FClIpoSF-f65DIh4dlmp6OSHEhUlYPu7VSHR\",\n            \"uniqueId\": \"HEROMAY23-2adaacdc-eda4-11ed-8e52-c67c1c172262\",\n            \"pnrConId\": \"2-ETKGHZN\"\n        },\n        \"emergency\": [],\n        \"documents\": []\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "updateExternalCustomerProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Validate message value is Profile Details Updated Successfully in response\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Profile Details Updated Successfully\");",
									"});",
									"",
									"pm.test(\"Validate firstName value is String\", function () {",
									"  pm.expect(jsonData.data.firstName).to.be.a(\"string\");",
									"  pm.environment.set(\"firstName\",jsonData.data.firstName);",
									"});",
									"",
									"pm.test(\"Validate email value is String\", function () {",
									"  pm.expect(jsonData.data.email).to.be.a(\"string\");",
									"  pm.environment.set(\"email\",jsonData.data.email);",
									"});",
									"",
									"pm.test(\"Validate addressLine1 value is String\", function () {",
									"  pm.expect(jsonData.data.addressLine1).to.be.a(\"string\");",
									"  pm.environment.set(\"addressLine1\",jsonData.data.addressLine1);",
									"});",
									"",
									"pm.test(\"Validate gender is value is \" + pm.environment.get(\"male\"), function () {",
									"  pm.expect(jsonData.data.gender).to.eql(\"male\");",
									"});",
									"",
									"pm.test(\"Validate bloodGroup is value is \" + pm.environment.get(\"bloodGroup\"), function () {",
									"  pm.expect(jsonData.data.bloodGroup).to.eql(\"A+\");",
									"});",
									"",
									"pm.test(\"Validate pincode is value is \" + pm.environment.get(\"pincode\"), function () {",
									"  pm.expect(jsonData.data.pincode).to.eql(\"110091\");",
									"});",
									"",
									"pm.test(\"Validate birthDate is value is \" + pm.environment.get(\"birthDate\"), function () {",
									"  pm.expect(jsonData.data.birthDate).to.eql(\"1995-01-02\");",
									"});",
									"",
									"pm.test(\"Validate Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Validate response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate status code name has OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var gender = \"male\";\r",
									"pm.environment.set(\"gender\", gender);\r",
									"\r",
									"var bloodGroup = \"A+\";\r",
									"pm.environment.set(\"bloodGroup\", bloodGroup);\r",
									"\r",
									"var pincode = \"110091\";\r",
									"pm.environment.set(\"pincode\", pincode);\r",
									"\r",
									"var birthDate = \"1995-01-02\";\r",
									"pm.environment.set(\"birthDate\", birthDate);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"birthDate\": \"{{birthDate}}\",\r\n        \"firstName\":\"{{$randomFirstName}}\", \r\n        \"gender\":\"{{gender}}\",\r\n        \"email\":\"{{$randomEmail}}\",\r\n        \"bloodGroup\":\"{{bloodGroup}}\",\r\n        \"addressLine1\": \"{{$randomStreetAddress}}\",\r\n        \"city\":\"Surat\",\r\n        \"state\":\"Gujarat\",\r\n        \"pincode\":\"{{pincode}}\",\r\n        \"isExisting\":1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updateExternalCustomerProfile",
							"host": [
								"{{enterpriseurl}}updateExternalCustomerProfile"
							]
						}
					},
					"response": [
						{
							"name": "updateExternalCustomerProfile",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"c57a48f8-a5e7-40e2-8377-4d2e0a97f7db\",\r\n        \"profilePicPath\":\"profilePicPath\",\r\n        \"bloodGroup\":\"b+\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/updateExternalCustomerProfile",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"updateExternalCustomerProfile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 08:59:19 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Customer Profile Updated Successfully\",\n    \"data\": {\n        \"customerIdAppId\": \"c57a48f8-a5e7-40e2-8377-4d2e0a97f7db_External\",\n        \"lastName\": \"SHARMA\",\n        \"firstName\": \"LOVEKANT\",\n        \"email\": \"\",\n        \"birthDate\": \"\",\n        \"mobileNo\": \"9982337548\",\n        \"gender\": \"M\",\n        \"addressLine1\": \"BANJI\",\n        \"state\": \"RAJASTHAN\",\n        \"addressLine2\": \"\",\n        \"district\": \"BHARATPUR\",\n        \"tehsil\": \"BHARATPUR\",\n        \"pincode\": \"321303\",\n        \"city\": \"BHARATPUR\",\n        \"bloodGroup\": \"b+\",\n        \"profilePicPath\": \"profilePicPath\",\n        \"deviceType\": \"IOS\",\n        \"osVersion\": \"15.2\",\n        \"deviceModel\": \"x86_64\",\n        \"secondaryContactNo\": \"\",\n        \"isdCode\": \"+91\",\n        \"firebaseToken\": \"cFQOL53_ikVvoeSiV8_0bm:APA91bEq6rhdQJydIjPLYWWp2qLXwM-fWsXXIFvxs9zJGTuloqw7bOvwqurYGnqrWRj_Y2cSgyJu3ieDgcyG2mf0gtSC_fb-7Lx1f3dYJQgmAZoJmbi9Q3GCa6YwcLUXVxoMBgnqv245\",\n        \"uniqueId\": \"\",\n        \"pnrConId\": \"1-2AXI19I9\",\n        \"appVersion\": \"\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "uploadProfilePicture",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"data\": { \r\n        \"base64Data\": \"extension:jpeg,\",\r\n        \"extension\": \"jpeg\",\r\n        \"customerID\":\"{{identifier}}\",\r\n        \"vinID\":\"\",\r\n\t\t\"documentIdentifier\":\"profilePicture/7073711241\",\r\n        \"category\":\"profile\",\r\n        \"subCategory\":\"\",\r\n        \"emergencyId\":\"\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}uploadDocument",
							"host": [
								"{{enterpriseurl}}uploadDocument"
							]
						}
					},
					"response": [
						{
							"name": "uploadProfilePicture",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n{\r\n    \"data\": { \r\n        \"base64Data\": \"extension:jpeg,\",\r\n        \"extension\": \"jpeg\",\r\n        \"customerID\":\"{{identifier}}\",\r\n        \"vinID\":\"\",\r\n\t\t\"documentIdentifier\":\"profilePicture/7073711241\",\r\n        \"category\":\"profile\",\r\n        \"subCategory\":\"\",\r\n        \"emergencyId\":\"\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}uploadDocument",
									"host": [
										"{{enterpriseurl}}uploadDocument"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:29:27 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Upload Document\",\n    \"data\": {\n        \"filePath\": \"https://oneapphero1.blob.core.windows.net/userdata/oneapp/profilePicture/7073711241@b3fa9b55-ca4e-49ec-a6b3-587e746457041715578167780.jpeg\",\n        \"status\": \"Success\",\n        \"message\": \"File uploaded successfully\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "uploadDrivingLicence",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"data\": { \r\n        \"base64Data\": \"extension:pdf,//base64value\",\r\n        \"extension\": \"pdf\",\r\n        \"customerID\":\"{{identifier}}\",\r\n        \"vinID\":\"\",\r\n\t\t\"documentIdentifier\":\"vehicleDocuments/7073711241\",\r\n        \"category\":\"driving license\",\r\n        \"subCategory\":\"\",\r\n        \"emergencyId\":\"\"\r\n       }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}uploadDocument",
							"host": [
								"{{enterpriseurl}}uploadDocument"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRelations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message is Relations fetched successfully.\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Relations fetched successfully.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 1 and value = Father\", function () {\r",
									"    pm.expect(jsonData.data.dataList[0].key).to.eql(\"1\");\r",
									"     pm.expect(jsonData.data.dataList[0].value).to.eql(\"Father\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 2 and value = Mother\", function () {\r",
									"     pm.expect(jsonData.data.dataList[1].key).to.eql(\"2\");\r",
									"     pm.expect(jsonData.data.dataList[1].value).to.eql(\"Mother\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 3 and value = Sister\", function () {\r",
									"     pm.expect(jsonData.data.dataList[2].key).to.eql(\"3\");\r",
									"     pm.expect(jsonData.data.dataList[2].value).to.eql(\"Sister\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 4 and value = Brother\", function () {\r",
									"     pm.expect(jsonData.data.dataList[3].key).to.eql(\"4\");\r",
									"     pm.expect(jsonData.data.dataList[3].value).to.eql(\"Brother\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 5 and value = Local Guardian\", function () {\r",
									"     pm.expect(jsonData.data.dataList[4].key).to.eql(\"5\");\r",
									"     pm.expect(jsonData.data.dataList[4].value).to.eql(\"Local Guardian\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 6 and value = Spouse\", function () {\r",
									"     pm.expect(jsonData.data.dataList[5].key).to.eql(\"6\");\r",
									"     pm.expect(jsonData.data.dataList[5].value).to.eql(\"Spouse\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 7 and value = Friend\", function () {\r",
									"     pm.expect(jsonData.data.dataList[6].key).to.eql(\"7\");\r",
									"     pm.expect(jsonData.data.dataList[6].value).to.eql(\"Friend\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getRelations",
							"host": [
								"{{enterpriseurl}}getRelations"
							]
						}
					},
					"response": [
						{
							"name": "getRelations",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}getRelations",
									"host": [
										"{{enterpriseurl}}getRelations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:43:02 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Relations fetched successfully.\",\n    \"data\": {\n        \"dataList\": [\n            {\n                \"key\": \"1\",\n                \"value\": \"Father\"\n            },\n            {\n                \"key\": \"2\",\n                \"value\": \"Mother\"\n            },\n            {\n                \"key\": \"3\",\n                \"value\": \"Sister\"\n            },\n            {\n                \"key\": \"4\",\n                \"value\": \"Brother\"\n            },\n            {\n                \"key\": \"5\",\n                \"value\": \"Local Guardian\"\n            },\n            {\n                \"key\": \"6\",\n                \"value\": \"Spouse\"\n            },\n            {\n                \"key\": \"7\",\n                \"value\": \"Friend\"\n            }\n        ]\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "updateEmergencyContact",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"564\",\r\n            \"name\": \"{{$randomFirstName}}\",\r\n            \"mobile\": \"{{randomNumber}}\",\r\n            \"relation\": \"5\"\r\n        },\r\n        \"action\": \"DELETE\" //ADD|EDIT|DELETE\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updateEmergencyContact",
							"host": [
								"{{enterpriseurl}}updateEmergencyContact"
							]
						}
					},
					"response": [
						{
							"name": "updateEmergencyContact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"27051\",\r\n            \"name\": \"Ritesh\",\r\n            \"mobile\": \"8818831288\",\r\n            \"relation\": \"5\"\r\n        },\r\n        \"action\": \"DELETE\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}updateEmergencyContact",
									"host": [
										"{{enterpriseurl}}updateEmergencyContact"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:52:06 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Emergency Contact Details Deleted Successfully\",\n    \"data\": {\n        \"appId\": \"External\",\n        \"specificAppId\": \"OneApp\",\n        \"customerIdentifier\": \"b3fa9b55-ca4e-49ec-a6b3-587e74645704\",\n        \"emergency\": {\n            \"id\": \"27051\",\n            \"name\": \"Ritesh\",\n            \"mobile\": \"8818831288\",\n            \"relation\": \"5\",\n            \"profilePic\": null\n        },\n        \"action\": \"DELETE\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "uploadEmergencyProfilePicture",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"data\": { \r\n        \"base64Data\": \"extension:png,//base64value\",\r\n        \"extension\": \"png\",\r\n        \"customerID\":\"{{identifier}}\",\r\n        \"vinID\":\"\",\r\n\t\t\"documentIdentifier\":\"emergencyContactProfilePic/result1\",\r\n        \"category\":\"emergency profile\",\r\n        \"subCategory\":\"\",\r\n        \"emergencyId\":\"4140\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}uploadDocument",
							"host": [
								"{{enterpriseurl}}uploadDocument"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendSOSAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message is We have sent alert SMS successfully\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"We have sent alert SMS successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate mobileNumber\", function () {\r",
									"    pm.expect(jsonData.data.mobileNo).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"data\": { \r\n        \"customerIdentifier\":\"{{identifier}}\",\r\n        \"userLocation\": \"https://www.mappls.com/@28.4136263,77.0426564\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}sendSOSAlert",
							"host": [
								"{{enterpriseurl}}sendSOSAlert"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "External Customer Vehicle",
			"item": [
				{
					"name": "getVehicleDetailsList",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n       }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getVehicleDetailsList",
							"host": [
								"{{enterpriseurl}}getVehicleDetailsList"
							]
						}
					},
					"response": [
						{
							"name": "getTopSixVehicleList",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b\"\r\n       }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/getVehicleDetailsList",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"getVehicleDetailsList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 08:45:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Vehicle Details\",\n    \"data\": {\n        \"vehicleDetails\": [\n            {\n                \"vinId\": \"MBLHAW125L4G01911\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"N\",\n                \"preCheckFlag\": \"\",\n                \"attrib42\": \"HSPPEIRSCFI\",\n                \"firstSaleDate\": \"2024-01-11T06:02:29.406Z\",\n                \"description\": \"SPLENDOR+ BS6 I3S DRS CAST FI BLACK SILVER\",\n                \"createdDateTime\": \"2024-01-11T06:02:29.406Z\",\n                \"warrantyEndDate\": \"2025-07-12T00:00:00Z\",\n                \"productAttribute02\": \"BKS\",\n                \"invoiceNumber\": \"98206828.0000000\",\n                \"insurancePolicyNumber\": \"2312910037238300000\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"FSC\",\n                \"warrantyKMS\": \"70000.0000000\",\n                \"primaryDealerName\": \"Ramesh Kapoor\",\n                \"engineNo\": \"HA11EYL4G01502\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAW125L4G01911\",\n                \"lastKMRun\": \"11838.0\",\n                \"licenceNumber\": \"DL14SM1701\",\n                \"insurancePolicyCompany\": \"HDFC ERGO General Insurance Company Limited\",\n                \"nextServiceDueDate\": \"2021-03-03T00:00:00Z\",\n                \"lastServiceDate\": \"2021-01-15T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-11T05:48:23Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10375\",\n                \"partNumber\": \"HSPPEIRSCFISBK\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"2-63ECS47\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            },\n            {\n                \"vinId\": \"MBLHAR08XJHE49993\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"\",\n                \"preCheckFlag\": \"\",\n                \"attrib42\": \"HSPPCDRSCCR\",\n                \"firstSaleDate\": \"2024-01-10T12:36:51.395Z\",\n                \"description\": \"SPLENDOR+ DRS CAST VIOLET BLACK\",\n                \"createdDateTime\": \"2024-01-10T12:36:51.395Z\",\n                \"warrantyEndDate\": \"2023-07-18T00:00:00Z\",\n                \"productAttribute02\": \"VBK\",\n                \"invoiceNumber\": \"96639042.0000000\",\n                \"insurancePolicyNumber\": \"\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"Paid Service\",\n                \"warrantyKMS\": \"70000.0000000\",\n                \"primaryDealerName\": \"Ramesh Kapoor\",\n                \"engineNo\": \"HA10AGJHEG8619\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAR08XJHE49993\",\n                \"lastKMRun\": \"25836.0\",\n                \"insurancePolicyCompany\": \"\",\n                \"nextServiceDueDate\": \"2021-01-18T00:00:00Z\",\n                \"lastServiceDate\": \"2020-10-15T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-10T12:15:29Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10375\",\n                \"partNumber\": \"HSPPCDRSCCRVBK\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"2-8Z4V8X5\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            },\n            {\n                \"vinId\": \"MBLHAR08XJHE22485\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"\",\n                \"preCheckFlag\": \"\",\n                \"attrib42\": \"HSPPCDRSCCR\",\n                \"firstSaleDate\": \"2024-01-10T12:36:51.380Z\",\n                \"description\": \"SPLENDOR+ DRS CAST PURPLE BLACK\",\n                \"createdDateTime\": \"2024-01-10T12:36:51.380Z\",\n                \"warrantyEndDate\": \"2023-06-19T00:00:00Z\",\n                \"productAttribute02\": \"PBK\",\n                \"invoiceNumber\": \"96639042.0000000\",\n                \"insurancePolicyNumber\": \"\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"Paid Service\",\n                \"warrantyKMS\": \"70000.0000000\",\n                \"primaryDealerName\": \"Ramesh Kapoor\",\n                \"engineNo\": \"HA10AGJHEC2271\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAR08XJHE22485\",\n                \"lastKMRun\": \"5392.0\",\n                \"licenceNumber\": \"TS25A7711\",\n                \"insurancePolicyCompany\": \"\",\n                \"nextServiceDueDate\": \"2021-12-23T00:00:00Z\",\n                \"lastServiceDate\": \"2021-09-14T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-10T12:15:28Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10375\",\n                \"partNumber\": \"HSPPCDRSCCRPBK\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"2-EUFB7MB\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            },\n            {\n                \"vinId\": \"MBLHAW080LHA60202\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"N\",\n                \"preCheckFlag\": \"\",\n                \"attrib42\": \"HSPPDIRSCCR\",\n                \"firstSaleDate\": \"2024-01-10T00:00:00Z\",\n                \"description\": \"SPLENDOR+ IBS I3S DRS CAST GREY BLACK\",\n                \"createdDateTime\": \"2024-01-10T09:39:44.807Z\",\n                \"warrantyEndDate\": \"2025-06-01T00:00:00Z\",\n                \"productAttribute02\": \"GBK\",\n                \"invoiceNumber\": \"97941653.0000000\",\n                \"insurancePolicyNumber\": \"3005/47913248/10200/000\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"Paid Service\",\n                \"warrantyKMS\": \"70000.0000000\",\n                \"primaryDealerName\": \"NORTH BIHAR AGRO AGENCIES (P) LTD.\",\n                \"engineNo\": \"HA10AGLHAF0547\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAW080LHA60202\",\n                \"lastKMRun\": \"4672.0\",\n                \"licenceNumber\": \"BR06CH1238\",\n                \"insurancePolicyCompany\": \"ICICI Lombard General Insurance Company Ltd\",\n                \"nextServiceDueDate\": \"2024-03-10T00:00:00Z\",\n                \"lastServiceDate\": \"2021-11-05T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-10T09:22:38Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10200\",\n                \"partNumber\": \"HSPPDIRSCCRGBK\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"1-4S50GL5\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            },\n            {\n                \"vinId\": \"MBLHAW121MHC28277\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"N\",\n                \"preCheckFlag\": \"Y\",\n                \"attrib42\": \"HSPPMIRSCFI\",\n                \"firstSaleDate\": \"2024-01-09T06:04:20.292Z\",\n                \"description\": \"SPLENDOR + I3S BS6 FI DRUM SELF CAST BLACK AND ACCENT\",\n                \"createdDateTime\": \"2024-01-09T06:04:20.292Z\",\n                \"warrantyEndDate\": \"2026-06-20T00:00:00Z\",\n                \"productAttribute02\": \"BLA\",\n                \"invoiceNumber\": \"98832889.0000000\",\n                \"insurancePolicyNumber\": \"2312910125425100000\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"FSC\",\n                \"warrantyKMS\": \"70000.0000000\",\n                \"primaryDealerName\": \"Ramesh Kapoor\",\n                \"engineNo\": \"HA11EDMHC49165\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAW121MHC28277\",\n                \"lastKMRun\": \"5209.0\",\n                \"licenceNumber\": \"DL5SCR2795\",\n                \"insurancePolicyCompany\": \"HDFC ERGO General Insurance Company Limited\",\n                \"nextServiceDueDate\": \"2022-08-24T00:00:00Z\",\n                \"lastServiceDate\": \"2022-05-16T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-09T05:44:34Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10375\",\n                \"partNumber\": \"HSPPMIRSCFIBLA\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"2-E2NZODO\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            },\n            {\n                \"vinId\": \"MBLHAW126LHF82634\",\n                \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n                \"serviceUpdate\": \"N\",\n                \"preCheckFlag\": \"\",\n                \"attrib42\": \"HSPPEIRSCFI\",\n                \"firstSaleDate\": \"2024-01-08T13:29:04.376Z\",\n                \"description\": \"SPLENDOR+ BS6 I3S DRS CAST FI BLACK SILVER\",\n                \"createdDateTime\": \"2024-01-08T13:29:04.376Z\",\n                \"warrantyEndDate\": \"2024-01-08T13:29:04.376Z\",\n                \"productAttribute02\": \"BKS\",\n                \"invoiceNumber\": \"98190254.0000000\",\n                \"insurancePolicyNumber\": \"2312910035318000000\",\n                \"model\": \"SPLENDOR +\",\n                \"lastJCType\": \"FSC\",\n                \"primaryDealerName\": \"Ramesh Kapoor\",\n                \"engineNo\": \"HA11EYLHF56248\",\n                \"cc\": \"100 CC\",\n                \"serialNumber\": \"MBLHAW126LHF82634\",\n                \"lastKMRun\": \"1131.0\",\n                \"licenceNumber\": \"DL5SCL8614\",\n                \"insurancePolicyCompany\": \"HDFC ERGO General Insurance Company Limited\",\n                \"nextServiceDueDate\": \"2024-01-08T13:29:04.376Z\",\n                \"lastServiceDate\": \"2020-10-18T00:00:00Z\",\n                \"updatedDateTime\": \"2024-01-08T13:11:48Z\",\n                \"jobId\": \"\",\n                \"primaryDealer\": \"10375\",\n                \"partNumber\": \"HSPPEIRSCFISBK\",\n                \"category\": \"Motorcycle\",\n                \"pnrConId\": \"2-5UVAEFJ\",\n                \"vehicleNickName\": \"\",\n                \"isPrimaryVehicle\": \"0\"\n            }\n        ]\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "updatePrimaryVehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"vinId\": \"MBLJA05EE89A03181\",\r\n        \"customerIdentifier\":\"{{identifier}}\",\r\n        \"isPrimaryVehicle\":\"1\",\r\n        \"vehicleNickName\":\"Motorcycle\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updatePrimaryVehicle",
							"host": [
								"{{enterpriseurl}}updatePrimaryVehicle"
							]
						}
					},
					"response": [
						{
							"name": "updateVehicleDetails",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"vinId\": \"MBLHA10AFA9H03684\",\r\n        \"customerIdentifier\": \"00c885d1-2665-4a1c-acef-eaff0629eb2f\",\r\n        \"isPrimaryVehicle\":1,\r\n        \"vehicleNickName\":\"Motorcycle\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/updateVehicleDetails",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"updateVehicleDetails"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 09:01:24 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Vehicle Details Updated Successfully\",\n    \"data\": {\n        \"vinId\": \"MBLHA10AFA9H03684\",\n        \"serviceUpdate\": \"\",\n        \"preCheckFlag\": \"\",\n        \"attrib42\": \"PPOHDRKCCR\",\n        \"firstSaleDate\": \"2023-11-21T04:42:53.607Z\",\n        \"description\": \"PASSION PRO DRK CAST BLACK HEAVY GREY\",\n        \"createdDateTime\": \"2023-11-21T04:42:53.607Z\",\n        \"warrantyEndDate\": \"2023-11-21T04:42:53.607Z\",\n        \"productAttribute02\": \"BHG\",\n        \"invoiceNumber\": \"\",\n        \"insurancePolicyNumber\": \"\",\n        \"model\": \"PASSION PRO\",\n        \"lastJCType\": \"Paid Service\",\n        \"warrantyKMS\": \"30000.0\",\n        \"primaryDealerName\": \"Default Organization\",\n        \"engineNo\": \"HA10ECA9H03921\",\n        \"cc\": \"100 CC\",\n        \"serialNumber\": \"MBLHA10AFA9H03684\",\n        \"lastKMRun\": \"161635.0\",\n        \"licenceNumber\": \"KA11V6163\",\n        \"insurancePolicyCompany\": \"\",\n        \"nextServiceDueDate\": \"2023-11-21T04:42:53.607Z\",\n        \"lastServiceDate\": \"2023-11-21T04:42:53.607Z\",\n        \"updatedDateTime\": \"2023-11-21T04:42:53.607Z\",\n        \"jobId\": \"\",\n        \"partNumber\": \"PPOHDRKCCRBHG\",\n        \"category\": \"Motorcycle\",\n        \"pnrConId\": \"2-RSB8JXH\",\n        \"vehicleNickName\": \"Motorcycle\",\n        \"isPrimaryVehicle\": \"1\"\n    },\n    \"success\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "getAllBookingsByMobileNo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"mobileNo\": \"7073711241\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dxlurl}}getAllBookingsByMobileNo",
							"host": [
								"{{dxlurl}}getAllBookingsByMobileNo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Testride Banners",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"city\": \"All\",\r\n        \"state\": \"All\",\r\n        \"model\": \"Karizma XMR\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dxlurl}}bannersAndTips",
							"host": [
								"{{dxlurl}}bannersAndTips"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBookingModelsByMobileNo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"mobileNo\": \"9078245007\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dxlurl}}getBookingModelsByMobileNo",
							"host": [
								"{{dxlurl}}getBookingModelsByMobileNo"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSetGo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"16b3fbb3-20af-4b3b-8b83-6952591dde09\",\r\n        \"accessKey\": \"40e32b0a-1b5f-4850-a0b8-824739f12e3a\"\r\n       }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dxlurl}}getSetGo",
							"host": [
								"{{dxlurl}}getSetGo"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTestRideByMobileNo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJsb2dpbklkIjoiODgwMDk5NjY3NyIsImFwcElkIjoiRXh0ZXJuYWwiLCJzcGVjaWZpY0FwcElkIjoiT25lQXBwIiwicm9sZXMiOiJPbmVBcHAudXNlci5hbGwiLCJtb2JpbGVObyI6Ijg4MDA5OTY2NzciLCJzdWIiOiJqd3QiLCJqdGkiOiI5MGQ5YzliYi03NTU3LTQ1MzktOTE4Zi02MjZkNTE5MjMzMzciLCJpYXQiOjE3MTA4NTMwMjUsImV4cCI6MTcxODYyOTAyNX0.I6HNBmZ1CRSVl1X_JCAOacg-nH2Irr9fgrNkuS-uz8E",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "947541fe74804954b9f57bee5c4b3d71"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"mobileNo\": \"8279463520\",\r\n        \"model\": \"PASSION PRO\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/api/getAllTestRideByMobileNo",
							"protocol": "https",
							"host": [
								"apim-shared-psku-01t",
								"azure-api",
								"net"
							],
							"path": [
								"enterprise",
								"api",
								"getAllTestRideByMobileNo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Generic APIs",
			"item": [
				{
					"name": "getTokenDetails",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"userid\": \"86420\",\r\n    \"fullName\": \"Swarnim Sinha\",\r\n    \"mobile\": \"7835856826\",\r\n    \"email\": \"abc@gmail.com\",\r\n    \"vehicleName\": \"Karizma\",\r\n    \"action\": \"1\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getTokenDetails",
							"host": [
								"{{enterpriseurl}}getTokenDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "SurveySparowAPI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "pr698_bDiD40YmU2gGdcLqC3sLW8Lvng8S61ILiXp6UDsMqulwabQHRCKuuFHDijOWauNLM6xaoKB0cB8DwokNTw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"VIN\":\"MBLHAW175NHJ0951\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}getResponseDetailByVin",
							"host": [
								"{{baseurl}}getResponseDetailByVin"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchStatePetrolPrice",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "pr698_bDiD40YmU2gGdcLqC3sLW8Lvng8S61ILiXp6UDsMqulwabQHRCKuuFHDijOWauNLM6xaoKB0cB8DwokNTw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"VIN\":\"MBLHAW175NHJ0951\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dxlurl}}fetchStatePetrolPrice",
							"host": [
								"{{dxlurl}}fetchStatePetrolPrice"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PositiveTesting",
			"item": [
				{
					"name": "externalLogin Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate success message value is \" + jsonData.success + \" in response\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message value is \" + jsonData.message + \" in response\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"OTP Generated Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate loginId value is \" + pm.environment.get(\"expectedloginId\") +\" in response\", function () {\r",
									"\r",
									"    pm.expect(jsonData.data.loginId).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate registeredUser value is true in response\", function () {\r",
									"     pm.expect(jsonData.data.registeredUser).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var expectedloginId = \"9891803084\";\r",
									"pm.environment.set(\"expectedloginId\", expectedloginId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"loginId\": {{expectedloginId}},\r\n        \"loginType\":\"mobile\",\r\n        \"notificationType\":\"sms\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}externalLogin",
							"host": [
								"{{enterpriseurl}}externalLogin"
							]
						}
					},
					"response": [
						{
							"name": "externalLogin_success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									},
									{
										"key": "appId",
										"value": "External",
										"type": "text"
									},
									{
										"key": "specificAppId",
										"value": "OneApp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"loginId\": \"8800996677\",\r\n        \"loginType\":\"mobile\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/externalLogin",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"externalLogin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 07:25:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP Generated Successfully\",\n    \"data\": {\n        \"loginId\": \"8800996677\",\n        \"registeredUser\": true\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "verifyOtpExternal Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsondata = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate success message value is true in reponse\", function () {\r",
									"    pm.expect(jsondata.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message value is \"+ jsondata.message+  \" in reponse\", function () {\r",
									"    pm.expect(jsondata.message).to.eql(\"OTP Verified Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate loginId value is \" + pm.environment.get(\"expectedloginId\")+  \" in reponse\", function () {\r",
									"    pm.expect(jsondata.data.loginId).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"token = jsondata.data.token;\r",
									"customerIdentifier = jsondata.data.customerIdentifier;\r",
									"access_key = jsondata.data.accessKey;\r",
									"accessToken = jsondata.data.accessToken;\r",
									"pm.test(\"Auth code has saved\", function()\r",
									"{\r",
									"    pm.environment.set(\"token\", token);\r",
									"     pm.environment.set(\"identifier\", customerIdentifier);\r",
									"     pm.environment.set(\"access_key\", access_key);\r",
									"     pm.environment.set(\"accessToken\", accessToken);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"loginId\": {{expectedloginId}},\r\n        \"otp\":\"123456\",\r\n        \"isdCode\":\"+91\",\r\n        \"deviceType\":\"IOS\",\r\n        \"osVersion\":\"15.1\",\r\n        \"appVersion\":\"10\",\r\n        \"deviceModel\" :\"x86_64\",\r\n        \"firebaseToken\": \"e9f_Vt_lRhK-GmPxDe2BkF:APA91bGec-ldCPcUWQ03iI9gE7yKsDTFavbB2_1Twh_GRrwLiHrDlSmEXCktaSkG9UoqCS0L2VlrJNv8u7WtKGOVu9byo5xVibFUL2xMhUFVpbuznqAZOQNqdvm-PfPJNTUEj5Rq_sGy\"\r\n        \r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}verifyOtpExternal",
							"host": [
								"{{enterpriseurl}}verifyOtpExternal"
							]
						}
					},
					"response": [
						{
							"name": "verifyOtpExternal_success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									},
									{
										"key": "appId",
										"value": "External",
										"type": "text"
									},
									{
										"key": "specificAppId",
										"value": "OneApp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"loginId\": \"8800996677\",\r\n        \"otp\":\"123456\",\r\n        \"isdCode\":\"+91\",\r\n        \"deviceType\":\"IOS\",\r\n        \"osVersion\":\"15.1\",\r\n        \"appVersion\":\"10\",\r\n        \"deviceModel\" :\"x86_64\",\r\n        \"firebaseToken\": \"e9f_Vt_lRhK-GmPxDe2BkF:APA91bGec-ldCPcUWQ03iI9gE7yKsDTFavbB2_1Twh_GRrwLiHrDlSmEXCktaSkG9UoqCS0L2VlrJNv8u7WtKGOVu9byo5xVibFUL2xMhUFVpbuznqAZOQNqdvm-PfPJNTUEj5Rq_sGy\"\r\n        \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/verifyOtpExternal",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"verifyOtpExternal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 07:27:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP Verified Successfully\",\n    \"data\": {\n        \"profilePicPath\": \"https://oneapphero1.blob.core.windows.net/userdata/oneapp/profilePicture/heroUserProfile@aeeebb27-fd11-4a3b-946e-7042758661001702545157419.png\",\n        \"isExisting\": \"1\",\n        \"pnrConId\": \"2-RSC6WLC\",\n        \"uniqueId\": \"HEROMAY23-549a41e6-f94f-11ed-8e52-c67c1c172262\",\n        \"firstName\": \"Randhir\",\n        \"lastName\": \"P\",\n        \"appName\": \"oneapp\",\n        \"mediaToken\": \"c3A9ciZzdD0yMDIyLTExLTIzVDA5OjIwOjUzWiZzZT0yMDI0LTEyLTMxVDE3OjIwOjUzWiZzcHI9\\naHR0cHMmc3Y9MjAyMS0wNi0wOCZzcj1jJnNpZz1mU2duWlF4T2ZhMUM5WDczQ3BRaWZLSFNsT3k0\\nQ3p5R1F4NEpkRmdxbENnJTNE\",\n        \"mobileNo\": \"8800996677\",\n        \"appId\": \"8800996677_External\",\n        \"loginId\": \"8800996677\",\n        \"token\": \"ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SmhZMk5sYzNOZmRHOXJaVzRpT2lJeU16VXpOalExWVMxa1pqVXpMVFJtTVdVdFlqazRNQzFrTVdJeU0yRTRaRFl3TlRRaUxDSmhZMk5sYzNOZmEyVjVJam9pTWpNMU16WTBOV0V0WkdZMU15MDBaakZsTFdJNU9EQXRaREZpTWpOaE9HUTJNRFUwSWl3aWJXOWlhV3hsVG04aU9pSTRPREF3T1RrMk5qYzNJaXdpWTNWemRHOXRaWEpKWkdWdWRHbG1hV1Z5SWpvaU1EQmpPRGcxWkRFdE1qWTJOUzAwWVRGakxXRmpaV1l0WldGbVpqQTJNamxsWWpKbUlpd2lZWEJ3WDJsa0lqb2lPRGd3TURrNU5qWTNOMTlGZUhSbGNtNWhiQ0lzSW5Od1pXTnBabWxqWDJGd2NGOXBaQ0k2SWs5dVpVRndjQ0lzSW5SdmEyVnVJam9pTWpNMU16WTBOV0V0WkdZMU15MDBaakZsTFdJNU9EQXRaREZpTWpOaE9HUTJNRFUwSWl3aVpYaHdJam94TnpBMU9ESXlNRFU0TENKdVlXMWxJam9pSW4wLmpMTDhCcWlGVlpmWW1jUHpFa0hDYTVoRGFpMjQxU1ktR2pOdEZreU1tUUk=\",\n        \"customerIdentifier\": \"00c885d1-2665-4a1c-acef-eaff0629eb2f\",\n        \"isdCode\": \"+91\",\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiJ9.eyJhcHBfaWQiOiJFeHRlcm5hbCIsInNwZWNpZmljX2FwcF9pZCI6Ik9uZUFwcCIsImxvZ2luSWQiOiI4ODAwOTk2Njc3IiwibW9iaWxlTm8iOiI4ODAwOTk2Njc3Iiwic3ViIjoiand0IiwianRpIjoiMDZjNDc0M2ItYmY5My00MzZmLWE2YjUtMjQ5MzY4MDAyZmZiIiwiaWF0IjoxNzA0OTU4MDU4LCJleHAiOjE3MTI3MzQwNTh9.MVmuFJ-LVkMX-2zJAHjKxIRku7WRfy3vlQw2DdM6taU\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "updateExternalCustomerProfile Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Validate message value is Profile Details Updated Successfully in response\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Profile Details Updated Successfully\");",
									"});",
									"",
									"pm.test(\"Validate firstName value is String\", function () {",
									"  pm.expect(jsonData.data.firstName).to.be.a(\"string\");",
									"  pm.environment.set(\"firstName\",jsonData.data.firstName);",
									"});",
									"",
									"pm.test(\"Validate email value is String\", function () {",
									"  pm.expect(jsonData.data.email).to.be.a(\"string\");",
									"  pm.environment.set(\"email\",jsonData.data.email);",
									"});",
									"",
									"pm.test(\"Validate addressLine1 value is String\", function () {",
									"  pm.expect(jsonData.data.addressLine1).to.be.a(\"string\");",
									"  pm.environment.set(\"addressLine1\",jsonData.data.addressLine1);",
									"});",
									"",
									"pm.test(\"Validate gender is value is \" + pm.environment.get(\"male\"), function () {",
									"  pm.expect(jsonData.data.gender).to.eql(\"male\");",
									"});",
									"",
									"pm.test(\"Validate bloodGroup is value is \" + pm.environment.get(\"bloodGroup\"), function () {",
									"  pm.expect(jsonData.data.bloodGroup).to.eql(\"A+\");",
									"});",
									"",
									"pm.test(\"Validate pincode is value is \" + pm.environment.get(\"pincode\"), function () {",
									"  pm.expect(jsonData.data.pincode).to.eql(\"110091\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Validate birthDate is value is \" + pm.environment.get(\"birthDate\"), function () {",
									"  pm.expect(jsonData.data.birthDate).to.eql(\"1995-01-02\");",
									"});",
									"",
									"pm.test(\"Validate Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Validate response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate status code name has OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var gender = \"male\";\r",
									"pm.environment.set(\"gender\", gender);\r",
									"\r",
									"var bloodGroup = \"A+\";\r",
									"pm.environment.set(\"bloodGroup\", bloodGroup);\r",
									"\r",
									"var pincode = \"110091\";\r",
									"pm.environment.set(\"pincode\", pincode);\r",
									"\r",
									"var birthDate = \"1995-01-02\";\r",
									"pm.environment.set(\"birthDate\", birthDate);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"birthDate\": \"{{birthDate}}\",\r\n        \"firstName\":\"{{$randomFirstName}}\", \r\n        \"gender\":\"{{gender}}\",\r\n        \"email\":\"{{$randomEmail}}\",\r\n        \"bloodGroup\":\"{{bloodGroup}}\",\r\n        \"addressLine1\": \"{{$randomStreetAddress}}\",\r\n        \"city\":\"Surat\",\r\n        \"state\":\"Gujarat\",\r\n        \"pincode\":\"{{pincode}}\",\r\n        \"isExisting\":1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updateExternalCustomerProfile",
							"host": [
								"{{enterpriseurl}}updateExternalCustomerProfile"
							]
						}
					},
					"response": [
						{
							"name": "updateExternalCustomerProfile",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"c57a48f8-a5e7-40e2-8377-4d2e0a97f7db\",\r\n        \"profilePicPath\":\"profilePicPath\",\r\n        \"bloodGroup\":\"b+\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/updateExternalCustomerProfile",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"updateExternalCustomerProfile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 08:59:19 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Customer Profile Updated Successfully\",\n    \"data\": {\n        \"customerIdAppId\": \"c57a48f8-a5e7-40e2-8377-4d2e0a97f7db_External\",\n        \"lastName\": \"SHARMA\",\n        \"firstName\": \"LOVEKANT\",\n        \"email\": \"\",\n        \"birthDate\": \"\",\n        \"mobileNo\": \"9982337548\",\n        \"gender\": \"M\",\n        \"addressLine1\": \"BANJI\",\n        \"state\": \"RAJASTHAN\",\n        \"addressLine2\": \"\",\n        \"district\": \"BHARATPUR\",\n        \"tehsil\": \"BHARATPUR\",\n        \"pincode\": \"321303\",\n        \"city\": \"BHARATPUR\",\n        \"bloodGroup\": \"b+\",\n        \"profilePicPath\": \"profilePicPath\",\n        \"deviceType\": \"IOS\",\n        \"osVersion\": \"15.2\",\n        \"deviceModel\": \"x86_64\",\n        \"secondaryContactNo\": \"\",\n        \"isdCode\": \"+91\",\n        \"firebaseToken\": \"cFQOL53_ikVvoeSiV8_0bm:APA91bEq6rhdQJydIjPLYWWp2qLXwM-fWsXXIFvxs9zJGTuloqw7bOvwqurYGnqrWRj_Y2cSgyJu3ieDgcyG2mf0gtSC_fb-7Lx1f3dYJQgmAZoJmbi9Q3GCa6YwcLUXVxoMBgnqv245\",\n        \"uniqueId\": \"\",\n        \"pnrConId\": \"1-2AXI19I9\",\n        \"appVersion\": \"\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "getExternalCustomerDetails Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Customer Profile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate firstName\", function () {\r",
									"  pm.expect(jsonData.data.profile.firstName).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate email\", function () {\r",
									"  pm.expect(jsonData.data.profile.email).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.email).to.eql(pm.environment.get(\"email\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate birthDate\", function () {\r",
									"  pm.expect(jsonData.data.profile.birthDate).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.birthDate).to.eql(pm.environment.get(\"birthDate\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate gender\", function () {\r",
									"  pm.expect(jsonData.data.profile.gender).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.gender).to.eql(pm.environment.get(\"gender\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate addressLine1\", function () {\r",
									"  pm.expect(jsonData.data.profile.addressLine1).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.addressLine1).to.eql(pm.environment.get(\"addressLine1\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate pincode\", function () {\r",
									"  pm.expect(jsonData.data.profile.pincode).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.pincode).to.eql(pm.environment.get(\"pincode\"));\r",
									"  \r",
									"});\r",
									"\r",
									"pm.test(\"Validate bloodGroup\", function () {\r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.eql(pm.environment.get(\"bloodGroup\"));\r",
									"  \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate bloodGroup\", function () {\r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.be.a(\"string\");\r",
									"  \r",
									"  pm.expect(jsonData.data.profile.bloodGroup).to.eql(pm.environment.get(\"bloodGroup\"));\r",
									"  \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "appId",
								"value": "{{AppId}}"
							},
							{
								"key": "specificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n       }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getExternalCustomerDetails",
							"host": [
								"{{enterpriseurl}}getExternalCustomerDetails"
							]
						}
					},
					"response": [
						{
							"name": "getExternalCustomerDetails",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "947541fe74804954b9f57bee5c4b3d71",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b\"\r\n       }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://apim-shared-psku-01t.azure-api.net/enterprise/dxl/api/getExternalCustomerDetails",
									"protocol": "https",
									"host": [
										"apim-shared-psku-01t",
										"azure-api",
										"net"
									],
									"path": [
										"enterprise",
										"dxl",
										"api",
										"getExternalCustomerDetails"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:76a210ac-da8b-4957-8f78-d12515b7c76f"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 08:46:43 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Customer Profile\",\n    \"data\": {\n        \"customerIdentifier\": \"5df1b191-5f80-465b-acb3-6bf0c314325b\",\n        \"customerIdAppId\": \"5df1b191-5f80-465b-acb3-6bf0c314325b_External\",\n        \"profile\": {\n            \"lastName\": \"ARORA\",\n            \"firstName\": \"MALLAIAHS\",\n            \"email\": \"mukesh1998@gmail.com\",\n            \"birthDate\": \"\",\n            \"mobileNo\": \"8282828282\",\n            \"gender\": \"male\",\n            \"addressLine1\": \"HNO39\",\n            \"state\": \"Bihar\",\n            \"addressLine2\": \"\",\n            \"district\": \"RANGAREDDI\",\n            \"tehsil\": \"\",\n            \"pincode\": \"800002\",\n            \"city\": \"Patna\",\n            \"bloodGroup\": \"\",\n            \"profilePicPath\": \"https://oneapphero1.blob.core.windows.net/userdata/oneapp/profilePicture/heroUserProfile@2b1527f2-0860-4f4f-9c2f-823107c9cb5c1684910956848.png\",\n            \"isExisting\": \"1\",\n            \"deviceType\": \"IOS\",\n            \"osVersion\": \"17.0\",\n            \"deviceModel\": \"x86_64\",\n            \"secondaryContactNo\": \"9191919191\",\n            \"isdCode\": \"+91\",\n            \"firebaseToken\": \"dXVUV4bOZEt9misGs2LPrp:APA91bFp03mBXiVrP-05vJRuRbS3ngaNHyD62mSpHj9Nt4oXQHWQp8rb2YnAHRidJDYCZhfbXR0vdwA4CWwbYtW2bjpzn7jVW9uRjJZ-FClIpoSF-f65DIh4dlmp6OSHEhUlYPu7VSHR\",\n            \"uniqueId\": \"HEROMAY23-2adaacdc-eda4-11ed-8e52-c67c1c172262\",\n            \"pnrConId\": \"2-ETKGHZN\"\n        },\n        \"emergency\": [],\n        \"documents\": []\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "getRelations Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message is Relations fetched successfully.\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Relations fetched successfully.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 1 and value = Father\", function () {\r",
									"    pm.expect(jsonData.data.dataList[0].key).to.eql(\"1\");\r",
									"     pm.expect(jsonData.data.dataList[0].value).to.eql(\"Father\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 2 and value = Mother\", function () {\r",
									"     pm.expect(jsonData.data.dataList[1].key).to.eql(\"2\");\r",
									"     pm.expect(jsonData.data.dataList[1].value).to.eql(\"Mother\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 3 and value = Sister\", function () {\r",
									"     pm.expect(jsonData.data.dataList[2].key).to.eql(\"3\");\r",
									"     pm.expect(jsonData.data.dataList[2].value).to.eql(\"Sister\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 4 and value = Brother\", function () {\r",
									"     pm.expect(jsonData.data.dataList[3].key).to.eql(\"4\");\r",
									"     pm.expect(jsonData.data.dataList[3].value).to.eql(\"Brother\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 5 and value = Local Guardian\", function () {\r",
									"     pm.expect(jsonData.data.dataList[4].key).to.eql(\"5\");\r",
									"     pm.expect(jsonData.data.dataList[4].value).to.eql(\"Local Guardian\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 6 and value = Spouse\", function () {\r",
									"     pm.expect(jsonData.data.dataList[5].key).to.eql(\"6\");\r",
									"     pm.expect(jsonData.data.dataList[5].value).to.eql(\"Spouse\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate key = 7 and value = Friend\", function () {\r",
									"     pm.expect(jsonData.data.dataList[6].key).to.eql(\"7\");\r",
									"     pm.expect(jsonData.data.dataList[6].value).to.eql(\"Friend\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}getRelations",
							"host": [
								"{{enterpriseurl}}getRelations"
							]
						}
					},
					"response": [
						{
							"name": "getRelations",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}getRelations",
									"host": [
										"{{enterpriseurl}}getRelations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:43:02 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Relations fetched successfully.\",\n    \"data\": {\n        \"dataList\": [\n            {\n                \"key\": \"1\",\n                \"value\": \"Father\"\n            },\n            {\n                \"key\": \"2\",\n                \"value\": \"Mother\"\n            },\n            {\n                \"key\": \"3\",\n                \"value\": \"Sister\"\n            },\n            {\n                \"key\": \"4\",\n                \"value\": \"Brother\"\n            },\n            {\n                \"key\": \"5\",\n                \"value\": \"Local Guardian\"\n            },\n            {\n                \"key\": \"6\",\n                \"value\": \"Spouse\"\n            },\n            {\n                \"key\": \"7\",\n                \"value\": \"Friend\"\n            }\n        ]\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "AddEmergencyContact Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"EmergencyContact_id\", jsonData.data.emergency.id);\r",
									"\r",
									"pm.test(\"Validate message is Emergency Contact Details Added Successfully\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Emergency Contact Details Added Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Emergency contact details saving\", function () {\r",
									"    pm.environment.set(\"EmergencyContact_id\", jsonData.data.emergency.id);\r",
									"    pm.environment.set(\"EmergencyContact_name\", jsonData.data.emergency.name);\r",
									"    pm.environment.set(\"EmergencyContact_mobile\", jsonData.data.emergency.mobile);\r",
									"    pm.environment.set(\"EmergencyContact_relation\", jsonData.data.emergency.relation);\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const phoneNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"phoneNumber\", phoneNumber );\r",
									"console.log(phoneNumber);\r",
									"\r",
									"const relation = _.random(1, 7)\r",
									"pm.variables.set(\"relation\", relation );\r",
									"console.log(relation);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"{{$randomInt}}\",\r\n            \"name\": \"{{$randomFirstName}}\",\r\n            \"mobile\": \"{{phoneNumber}}\",\r\n            \"relation\": \"{{relation}}\"\r\n        },\r\n        \"action\": \"ADD\" //ADD|EDIT|DELETE\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updateEmergencyContact",
							"host": [
								"{{enterpriseurl}}updateEmergencyContact"
							]
						}
					},
					"response": [
						{
							"name": "updateEmergencyContact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"27051\",\r\n            \"name\": \"Ritesh\",\r\n            \"mobile\": \"8818831288\",\r\n            \"relation\": \"5\"\r\n        },\r\n        \"action\": \"DELETE\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}updateEmergencyContact",
									"host": [
										"{{enterpriseurl}}updateEmergencyContact"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:52:06 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Emergency Contact Details Deleted Successfully\",\n    \"data\": {\n        \"appId\": \"External\",\n        \"specificAppId\": \"OneApp\",\n        \"customerIdentifier\": \"b3fa9b55-ca4e-49ec-a6b3-587e74645704\",\n        \"emergency\": {\n            \"id\": \"27051\",\n            \"name\": \"Ritesh\",\n            \"mobile\": \"8818831288\",\n            \"relation\": \"5\",\n            \"profilePic\": null\n        },\n        \"action\": \"DELETE\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "deleteEmergencyContact Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message is Emergency Contact Details Deleted Successfully\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Emergency Contact Details Deleted Successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validate EmergencyContact_id \", function () {\r",
									"    pm.expect(jsonData.data.emergency.id).to.eql(pm.environment.get(\"EmergencyContact_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate EmergencyContact_name \", function () {\r",
									"    pm.expect(jsonData.data.emergency.name).to.eql(pm.environment.get(\"EmergencyContact_name\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate EmergencyContact_mobile \", function () {\r",
									"    pm.expect(jsonData.data.emergency.mobile).to.eql(pm.environment.get(\"EmergencyContact_mobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate EmergencyContact_relation \", function () {\r",
									"    pm.expect(jsonData.data.emergency.relation).to.eql(pm.environment.get(\"EmergencyContact_relation\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"{{EmergencyContact_id}}\",\r\n            \"name\": \"{{EmergencyContact_name}}\",\r\n            \"mobile\": \"{{EmergencyContact_mobile}}\",\r\n            \"relation\": \"{{EmergencyContact_relation}}\"\r\n        },\r\n        \"action\": \"DELETE\" //ADD|EDIT|DELETE\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}updateEmergencyContact",
							"host": [
								"{{enterpriseurl}}updateEmergencyContact"
							]
						}
					},
					"response": [
						{
							"name": "updateEmergencyContact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ocp-apim-subscription-key",
										"value": "{{key}}"
									},
									{
										"key": "AppId",
										"value": "{{AppId}}"
									},
									{
										"key": "SpecificAppId",
										"value": "{{SpecificAppId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"customerIdentifier\": \"{{identifier}}\",\r\n        \"emergency\": {\r\n            \"id\": \"27051\",\r\n            \"name\": \"Ritesh\",\r\n            \"mobile\": \"8818831288\",\r\n            \"relation\": \"5\"\r\n        },\r\n        \"action\": \"DELETE\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{enterpriseurl}}updateEmergencyContact",
									"host": [
										"{{enterpriseurl}}updateEmergencyContact"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Mon, 13 May 2024 05:52:06 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:48f1a29b-25b2-4563-991b-f69a98f9a786"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "script-src 'self'"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Cache-control",
									"value": "no-store"
								},
								{
									"key": "Permissions-Policy",
									"value": "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Emergency Contact Details Deleted Successfully\",\n    \"data\": {\n        \"appId\": \"External\",\n        \"specificAppId\": \"OneApp\",\n        \"customerIdentifier\": \"b3fa9b55-ca4e-49ec-a6b3-587e74645704\",\n        \"emergency\": {\n            \"id\": \"27051\",\n            \"name\": \"Ritesh\",\n            \"mobile\": \"8818831288\",\n            \"relation\": \"5\",\n            \"profilePic\": null\n        },\n        \"action\": \"DELETE\"\n    },\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "sendSOSAlert Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate message is We have sent alert SMS successfully\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"We have sent alert SMS successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate mobileNumber\", function () {\r",
									"    pm.expect(jsonData.data.mobileNo).to.eql(pm.environment.get(\"expectedloginId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Validate success is true\", function () {\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Validate Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate content-Type is present and value is application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ocp-apim-subscription-key",
								"value": "{{key}}"
							},
							{
								"key": "AppId",
								"value": "{{AppId}}"
							},
							{
								"key": "SpecificAppId",
								"value": "{{SpecificAppId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"data\": { \r\n        \"customerIdentifier\":\"{{identifier}}\",\r\n        \"userLocation\": \"https://www.mappls.com/@28.4136263,77.0426564\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{enterpriseurl}}sendSOSAlert",
							"host": [
								"{{enterpriseurl}}sendSOSAlert"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}